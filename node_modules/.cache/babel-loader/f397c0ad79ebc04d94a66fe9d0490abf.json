{"ast":null,"code":"import { API_URL } from \"../config\";\nexport const findUsers = state => state.users;\nexport const findUserByNameAndNumber = (_ref, name, number) => {\n  let {\n    users\n  } = _ref;\n  return users.find(user => user.name === name && user.number === number);\n};\nexport const findUserById = (_ref2, id) => {\n  let {\n    users\n  } = _ref2;\n  return users.find(user => user.id === id);\n};\n\nconst createActionName = name => `app/users/${name}`;\n\nconst UPDATE_USERS = createActionName(\"UPDATE_USERS\");\nexport const updateUsers = payload => ({\n  type: UPDATE_USERS,\n  payload\n});\nexport const fetchUsers = dispatch => {\n  return dispatch => {\n    fetch(API_URL + '/users').then(res => res.json()).then(users => dispatch(updateUsers(users)));\n  };\n};\n\nconst reducer = function () {\n  let statePart = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case UPDATE_USERS:\n      return [...action.payload];\n\n    default:\n      return statePart;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/wiktor2/Desktop/programowanie/PROGRAMOWANIE/projekty w react/olimpia-app(dziala)/komreduxserver/src/redux/usersRedux.js"],"names":["API_URL","findUsers","state","users","findUserByNameAndNumber","name","number","find","user","findUserById","id","createActionName","UPDATE_USERS","updateUsers","payload","type","fetchUsers","dispatch","fetch","then","res","json","reducer","statePart","action"],"mappings":"AAAA,SAASA,OAAT,QAAwB,WAAxB;AAEA,OAAO,MAAMC,SAAS,GAAGC,KAAK,IAAIA,KAAK,CAACC,KAAjC;AAEP,OAAO,MAAMC,uBAAuB,GAAG,OAAUC,IAAV,EAAgBC,MAAhB;AAAA,MAAC;AAACH,IAAAA;AAAD,GAAD;AAAA,SAA2BA,KAAK,CAACI,IAAN,CAAWC,IAAI,IAAIA,IAAI,CAACH,IAAL,KAAcA,IAAd,IAAsBG,IAAI,CAACF,MAAL,KAAgBA,MAAzD,CAA3B;AAAA,CAAhC;AACP,OAAO,MAAMG,YAAY,GAAG,QAAUC,EAAV;AAAA,MAAC;AAACP,IAAAA;AAAD,GAAD;AAAA,SAAiBA,KAAK,CAACI,IAAN,CAAWC,IAAI,IAAIA,IAAI,CAACE,EAAL,KAAYA,EAA/B,CAAjB;AAAA,CAArB;;AAEP,MAAMC,gBAAgB,GAAGN,IAAI,IAAK,aAAYA,IAAK,EAAnD;;AACA,MAAMO,YAAY,GAAGD,gBAAgB,CAAC,cAAD,CAArC;AAEA,OAAO,MAAME,WAAW,GAAGC,OAAO,KAAK;AAAEC,EAAAA,IAAI,EAAEH,YAAR;AAAsBE,EAAAA;AAAtB,CAAL,CAA3B;AACP,OAAO,MAAME,UAAU,GAAGC,QAAQ,IAAI;AAClC,SAAQA,QAAD,IAAc;AACjBC,IAAAA,KAAK,CAAClB,OAAO,GAAG,QAAX,CAAL,CACKmB,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUhB,KAAK,IAAIc,QAAQ,CAACJ,WAAW,CAACV,KAAD,CAAZ,CAF3B;AAGC,GAJL;AAKH,CANM;;AAQP,MAAMmB,OAAO,GAAG,YAA4B;AAAA,MAA3BC,SAA2B,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACxC,UAAOA,MAAM,CAACT,IAAd;AACI,SAAKH,YAAL;AACI,aAAO,CAAC,GAAGY,MAAM,CAACV,OAAX,CAAP;;AACJ;AACI,aAAOS,SAAP;AAJR;AAMH,CAPD;;AAQA,eAAeD,OAAf","sourcesContent":["import { API_URL } from \"../config\";\n\nexport const findUsers = state => state.users;\n\nexport const findUserByNameAndNumber = ({users}, name, number) => users.find(user => user.name === name && user.number === number)\nexport const findUserById = ({users}, id) => users.find(user => user.id === id)\n\nconst createActionName = name => `app/users/${name}`;\nconst UPDATE_USERS = createActionName(\"UPDATE_USERS\");\n\nexport const updateUsers = payload => ({ type: UPDATE_USERS, payload});\nexport const fetchUsers = dispatch => {\n    return (dispatch) => {\n        fetch(API_URL + '/users')\n            .then(res => res.json())\n            .then(users => dispatch(updateUsers(users)));\n        }\n}\n\nconst reducer = (statePart = [], action) => {\n    switch(action.type) {\n        case UPDATE_USERS:\n            return [...action.payload];\n        default:\n            return statePart;\n    }\n}\nexport default reducer;"]},"metadata":{},"sourceType":"module"}